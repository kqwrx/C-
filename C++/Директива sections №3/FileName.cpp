#include <iostream>  
#include <vector>     
#include <cmath>      
#include <omp.h>      // Подключение библиотеки OpenMP для параллельных вычислений

// Функция проверки числа на простоту
bool prime(int n)
{
    if (n == 1) return false;        // 1 не является простым числом
    if (n % 2 == 0 && n != 2) return false;  // Чётные числа, кроме 2, не простые
    for (int i = 3; i * i <= n; i += 2)  // Проверяем делители от 3 до корня из n с шагом 2
        if (n % i == 0) return false;    // Если найден делитель, число не простое
    return true;                     // Если делителей нет, число простое
}

// Функция подсчёта простых чисел от 1 до n
int prime_numbers(int n)
{
    if (n < 2) return 0;  // Если n < 2, простых чисел нет (1 не считается простым)
    int count = 1;         // Начинаем с 1, так как 2 уже простое число

#pragma omp parallel  // Начало параллельной области (создаётся группа потоков)
    {
        // reduction(+:count) означает, что после завершения секций результаты сложатся
#pragma omp parallel sections reduction(+:count)
        {
            // Первая секция (выполняется в одном потоке)
#pragma omp section
            {
                // Проверяем числа от 3 до n/2 с шагом 2 (только нечётные)
                for (int i = 3; i <= n; i += 4)
                {
                    if (prime(i)) count++;  // Если число простое, увеличиваем счётчик
                }
            }

            // Вторая секция (выполняется в другом потоке)
#pragma omp section
            {
                // Проверяем числа от n/2 + 1 до n с шагом 2 (только нечётные)
                for (int i = 5; i <= n; i += 4)
                {
                    if (prime(i)) count++;  // Если число простое, увеличиваем счётчик
                }
            }
        }
    }
    return count;  // Возвращаем общее количество простых чисел
}

// Главная функция программы
int main()
{
    int n;
    std::cout << "Enter n: ";  // Вывод приглашения для ввода
    std::cin >> n;             // Чтение числа n от пользователя

    // Вызов функции подсчёта простых чисел и сохранение результата
    int result = prime_numbers(n);
    // Вывод результата
    std::cout << "Prime number from 1 to " << n << ": " << result << std::endl;

    return 0;  // Завершение программы
}